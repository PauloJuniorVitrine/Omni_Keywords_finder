"""
Exemplo de Uso: Google Keyword Planner Validator
Demonstra como usar o validador avan√ßado com Google Keyword Planner

Prompt: Google Keyword Planner como Validador
Ruleset: enterprise_control_layer.yaml
Data: 2024-12-20
Vers√£o: 1.0.0
"""

import os
import yaml
from typing import List
from datetime import datetime

from domain.models import Keyword
from infrastructure.processamento.processador_keywords import ProcessadorKeywords
from infrastructure.validacao import ValidadorAvancado
from shared.logger import logger

def carregar_configuracao() -> dict:
    """
    Carrega configura√ß√£o do arquivo YAML.
    
    Returns:
        Configura√ß√£o carregada
    """
    config_path = "config/google_keyword_planner.yaml"
    
    if not os.path.exists(config_path):
        raise FileNotFoundError(f"Arquivo de configura√ß√£o n√£o encontrado: {config_path}")
    
    with open(config_path, 'r', encoding='utf-8') as file:
        config = yaml.safe_load(file)
    
    # Substituir vari√°veis de ambiente
    config = substituir_variaveis_ambiente(config)
    
    return config

def substituir_variaveis_ambiente(config: dict) -> dict:
    """
    Substitui vari√°veis de ambiente na configura√ß√£o.
    
    Args:
        config: Configura√ß√£o original
        
    Returns:
        Configura√ß√£o com vari√°veis substitu√≠das
    """
    config_str = str(config)
    
    # Substituir vari√°veis de ambiente
    for key, value in os.environ.items():
        config_str = config_str.replace(f"${{{key}}}", value)
    
    # Converter de volta para dict
    return eval(config_str)

def criar_keywords_exemplo() -> List[Keyword]:
    """
    Cria lista de keywords de exemplo para teste.
    
    Returns:
        Lista de keywords
    """
    from domain.models import IntencaoBusca
    
    keywords = [
        Keyword(
            termo="marketing digital",
            volume_busca=1000,
            cpc=2.5,
            concorrencia=0.7,
            intencao=IntencaoBusca.COMERCIAL,
            fonte="exemplo"
        ),
        Keyword(
            termo="curso de python",
            volume_busca=5000,
            cpc=1.8,
            concorrencia=0.6,
            intencao=IntencaoBusca.INFORMACIONAL,
            fonte="exemplo"
        ),
        Keyword(
            termo="receita bolo chocolate",
            volume_busca=800,
            cpc=0.5,
            concorrencia=0.3,
            intencao=IntencaoBusca.INFORMACIONAL,
            fonte="exemplo"
        ),
        Keyword(
            termo="exercicios em casa",
            volume_busca=3000,
            cpc=1.2,
            concorrencia=0.5,
            intencao=IntencaoBusca.INFORMACIONAL,
            fonte="exemplo"
        ),
        Keyword(
            termo="dicas viagem",
            volume_busca=2000,
            cpc=1.5,
            concorrencia=0.6,
            intencao=IntencaoBusca.INFORMACIONAL,
            fonte="exemplo"
        )
    ]
    
    return keywords

def exemplo_validacao_cascata():
    """
    Exemplo de valida√ß√£o em cascata.
    """
    print("üîÑ **EXEMPLO: Valida√ß√£o em Cascata**")
    print("=" * 50)
    
    # Carregar configura√ß√£o
    config = carregar_configuracao()
    
    # Criar processador
    processador = ProcessadorKeywords(config=config)
    
    # Criar keywords de exemplo
    keywords = criar_keywords_exemplo()
    
    print(f"üìä Keywords iniciais: {len(keywords)}")
    for kw in keywords:
        print(f"  - {kw.termo}")
    
    # Processar com valida√ß√£o em cascata
    keywords_aprovadas = processador.processar_keywords(
        keywords, 
        estrategia_validacao="cascata"
    )
    
    print(f"\n‚úÖ Keywords aprovadas: {len(keywords_aprovadas)}")
    for kw in keywords_aprovadas:
        score = getattr(kw, 'score_qualidade', 'N/A')
        print(f"  - {kw.termo} (Score: {score})")
    
    # Mostrar m√©tricas
    metricas = processador.get_metricas_completas()
    print(f"\nüìà M√©tricas de Processamento:")
    print(f"  - Total execu√ß√µes: {metricas['processador']['total_execucoes']}")
    print(f"  - Taxa aprova√ß√£o: {metricas['processador']['total_keywords_aprovadas'] / metricas['processador']['total_keywords_processadas']:.2%}")

def exemplo_validacao_paralela():
    """
    Exemplo de valida√ß√£o paralela.
    """
    print("\nüîÑ **EXEMPLO: Valida√ß√£o Paralela**")
    print("=" * 50)
    
    # Carregar configura√ß√£o
    config = carregar_configuracao()
    
    # Criar validador avan√ßado diretamente
    validador = ValidadorAvancado(config.get("validacao", {}))
    
    # Criar keywords de exemplo
    keywords = criar_keywords_exemplo()
    
    print(f"üìä Keywords iniciais: {len(keywords)}")
    
    # Validar em paralelo
    keywords_aprovadas = validador.validar_keywords(
        keywords, 
        estrategia="paralela"
    )
    
    print(f"\n‚úÖ Keywords aprovadas: {len(keywords_aprovadas)}")
    for kw in keywords_aprovadas:
        print(f"  - {kw.termo}")
    
    # Mostrar estat√≠sticas
    estatisticas = validador.get_estatisticas()
    print(f"\nüìà Estat√≠sticas do Validador:")
    print(f"  - Total execu√ß√µes: {estatisticas['validador_avancado']['total_executions']}")
    print(f"  - Taxa aprova√ß√£o: {estatisticas['validador_avancado']['overall_approval_rate']:.2%}")

def exemplo_validacao_consenso():
    """
    Exemplo de valida√ß√£o por consenso.
    """
    print("\nüîÑ **EXEMPLO: Valida√ß√£o por Consenso**")
    print("=" * 50)
    
    # Carregar configura√ß√£o
    config = carregar_configuracao()
    
    # Criar validador avan√ßado
    validador = ValidadorAvancado(config.get("validacao", {}))
    
    # Criar keywords de exemplo
    keywords = criar_keywords_exemplo()
    
    print(f"üìä Keywords iniciais: {len(keywords)}")
    
    # Validar por consenso
    keywords_aprovadas = validador.validar_keywords(
        keywords, 
        estrategia="consenso"
    )
    
    print(f"\n‚úÖ Keywords aprovadas por consenso: {len(keywords_aprovadas)}")
    for kw in keywords_aprovadas:
        print(f"  - {kw.termo}")

def exemplo_metricas_google():
    """
    Exemplo de obten√ß√£o de m√©tricas espec√≠ficas do Google.
    """
    print("\nüîÑ **EXEMPLO: M√©tricas do Google Keyword Planner**")
    print("=" * 50)
    
    # Carregar configura√ß√£o
    config = carregar_configuracao()
    
    # Criar validador Google Keyword Planner
    from infrastructure.validacao.google_keyword_planner_validator import GoogleKeywordPlannerValidator
    
    google_config = config.get("validacao", {}).get("google_keyword_planner", {})
    validador = GoogleKeywordPlannerValidator(google_config)
    
    # Keywords para obter m√©tricas
    keywords_teste = ["marketing digital", "curso python", "receita bolo"]
    
    for keyword in keywords_teste:
        print(f"\nüîç Obtendo m√©tricas para: '{keyword}'")
        
        try:
            metricas = validador.obter_metricas(keyword)
            
            if metricas:
                print(f"  üìä Volume de busca: {metricas.get('search_volume', 'N/A')}")
                print(f"  üèÜ Competi√ß√£o: {metricas.get('competition', 'N/A')}")
                print(f"  üí∞ CPC: ${metricas.get('cpc', 'N/A')}")
                print(f"  üìà √çndice competi√ß√£o: {metricas.get('competition_index', 'N/A')}")
                print(f"  üïí √öltima atualiza√ß√£o: {metricas.get('last_updated', 'N/A')}")
                print(f"  üîó Fonte: {metricas.get('source', 'N/A')}")
            else:
                print(f"  ‚ùå M√©tricas n√£o dispon√≠veis")
                
        except Exception as e:
            print(f"  ‚ùå Erro ao obter m√©tricas: {str(e)}")

def main():
    """
    Fun√ß√£o principal que executa todos os exemplos.
    """
    print("üöÄ **GOOGLE KEYWORD PLANNER VALIDATOR - EXEMPLOS**")
    print("=" * 60)
    print(f"üìÖ Data/Hora: {datetime.utcnow().strftime('%Y-%m-%data %H:%M:%S')} UTC")
    print("=" * 60)
    
    try:
        # Exemplo 1: Valida√ß√£o em Cascata
        exemplo_validacao_cascata()
        
        # Exemplo 2: Valida√ß√£o Paralela
        exemplo_validacao_paralela()
        
        # Exemplo 3: Valida√ß√£o por Consenso
        exemplo_validacao_consenso()
        
        # Exemplo 4: M√©tricas do Google
        exemplo_metricas_google()
        
        print("\n‚úÖ **Todos os exemplos executados com sucesso!**")
        
    except Exception as e:
        logger.error({
            "timestamp": datetime.utcnow().isoformat(),
            "event": "erro_execucao_exemplos",
            "status": "error",
            "source": "google_keyword_planner_example.main",
            "details": {"erro": str(e)}
        })
        print(f"\n‚ùå **Erro durante execu√ß√£o: {str(e)}**")

if __name__ == "__main__":
    main() 