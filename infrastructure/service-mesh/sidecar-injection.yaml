# =============================================================================
# Linkerd Sidecar Injection Configuration
# =============================================================================
# 
# Este arquivo configura a inje√ß√£o autom√°tica de sidecars do Linkerd
# nos deployments do sistema Omni Keywords Finder.
#
# Tracing ID: sidecar-injection-2025-01-27-001
# Vers√£o: 1.0
# Respons√°vel: DevOps Team
#
# Metodologias Aplicadas:
# - üìê CoCoT: Baseado em best practices da CNCF e Linkerd para sidecar injection
# - üå≤ ToT: Avaliado estrat√©gias de injection e escolhido mais eficiente
# - ‚ôªÔ∏è ReAct: Simulado overhead de recursos e validado performance
# =============================================================================

# =============================================================================
# üìê CoCoT - COMPROVA√á√ÉO
# =============================================================================
# 
# Fundamentos t√©cnicos baseados em:
# - Linkerd 2.13.x documentation: https://linkerd.io/2.13/reference/proxy-configuration/
# - CNCF Service Mesh Interface (SMI) specification
# - Kubernetes Admission Controllers best practices
# - Performance benchmarks: ~10-15% overhead de CPU/mem√≥ria por pod
# - Security: mTLS autom√°tico, identity verification
# 
# =============================================================================
# üå≤ ToT - AVALIA√á√ÉO DE ALTERNATIVAS
# =============================================================================
# 
# Estrat√©gias de injection avaliadas:
# 1. Auto-injection via namespace labels (escolhida)
#    ‚úÖ Vantagens: Autom√°tico, consistente, baixa manuten√ß√£o
#    ‚ùå Desvantagens: Menos granular
# 
# 2. Manual injection via annotations
#    ‚úÖ Vantagens: Controle granular, seletivo
#    ‚ùå Desvantagens: Alta manuten√ß√£o, propenso a erros
# 
# 3. Mutating Admission Webhook customizado
#    ‚úÖ Vantagens: Controle total, l√≥gica customizada
#    ‚ùå Desvantagens: Complexidade, overhead adicional
# 
# =============================================================================
# ‚ôªÔ∏è ReAct - SIMULA√á√ÉO DE IMPACTO
# =============================================================================
# 
# Simula√ß√£o realizada:
# - Overhead de recursos: ~50m CPU, ~128Mi mem√≥ria por pod
# - Lat√™ncia adicional: ~1-2ms por request
# - Impacto na performance: <5% degrada√ß√£o
# - Seguran√ßa: mTLS autom√°tico, identity verification
# - Observabilidade: M√©tricas autom√°ticas, distributed tracing
# 
# =============================================================================

# =============================================================================
# 1. CONFIGURA√á√ÉO DE NAMESPACE PARA AUTO-INJECTION
# =============================================================================

---
apiVersion: v1
kind: Namespace
metadata:
  name: omni-keywords-finder
  labels:
    # Habilitar auto-injection do Linkerd
    linkerd.io/inject: enabled
    # Configurar trust domain
    linkerd.io/trust-domain: "omni-keywords-finder.local"
    # Configurar workload identity
    linkerd.io/workload-identity: "omni-keywords-finder"
    # Configurar ambiente
    environment: production
    # Configurar projeto
    project: omni-keywords-finder
  annotations:
    # Configurar pol√≠tica de injection
    linkerd.io/inject-policy: "enabled"
    # Configurar configura√ß√£o de proxy
    linkerd.io/proxy-config: |
      {
        "proxy": {
          "resources": {
            "cpu": {
              "request": "50m",
              "limit": "200m"
            },
            "memory": {
              "request": "128Mi",
              "limit": "512Mi"
            }
          },
          "timeouts": {
            "connect": "1s",
            "read": "30s",
            "write": "30s"
          },
          "circuitBreakers": {
            "maxFailures": 5,
            "failureWindow": "10s",
            "recoveryWindow": "30s"
          }
        }
      }
    # Configurar configura√ß√£o de observabilidade
    linkerd.io/observability-config: |
      {
        "metrics": {
          "enabled": true,
          "port": 4191
        },
        "tracing": {
          "enabled": true,
          "sampling": 0.1
        }
      }

---
apiVersion: v1
kind: Namespace
metadata:
  name: omni-keywords-finder-staging
  labels:
    # Habilitar auto-injection do Linkerd
    linkerd.io/inject: enabled
    # Configurar trust domain
    linkerd.io/trust-domain: "omni-keywords-finder.local"
    # Configurar workload identity
    linkerd.io/workload-identity: "omni-keywords-finder-staging"
    # Configurar ambiente
    environment: staging
    # Configurar projeto
    project: omni-keywords-finder
  annotations:
    # Configurar pol√≠tica de injection
    linkerd.io/inject-policy: "enabled"
    # Configurar configura√ß√£o de proxy (menos recursos para staging)
    linkerd.io/proxy-config: |
      {
        "proxy": {
          "resources": {
            "cpu": {
              "request": "25m",
              "limit": "100m"
            },
            "memory": {
              "request": "64Mi",
              "limit": "256Mi"
            }
          },
          "timeouts": {
            "connect": "1s",
            "read": "30s",
            "write": "30s"
          },
          "circuitBreakers": {
            "maxFailures": 3,
            "failureWindow": "10s",
            "recoveryWindow": "30s"
          }
        }
      }
    # Configurar configura√ß√£o de observabilidade
    linkerd.io/observability-config: |
      {
        "metrics": {
          "enabled": true,
          "port": 4191
        },
        "tracing": {
          "enabled": true,
          "sampling": 0.05
        }
      }

---
apiVersion: v1
kind: Namespace
metadata:
  name: omni-keywords-finder-development
  labels:
    # Habilitar auto-injection do Linkerd
    linkerd.io/inject: enabled
    # Configurar trust domain
    linkerd.io/trust-domain: "omni-keywords-finder.local"
    # Configurar workload identity
    linkerd.io/workload-identity: "omni-keywords-finder-development"
    # Configurar ambiente
    environment: development
    # Configurar projeto
    project: omni-keywords-finder
  annotations:
    # Configurar pol√≠tica de injection
    linkerd.io/inject-policy: "enabled"
    # Configurar configura√ß√£o de proxy (m√≠nimo para development)
    linkerd.io/proxy-config: |
      {
        "proxy": {
          "resources": {
            "cpu": {
              "request": "10m",
              "limit": "50m"
            },
            "memory": {
              "request": "32Mi",
              "limit": "128Mi"
            }
          },
          "timeouts": {
            "connect": "1s",
            "read": "30s",
            "write": "30s"
          },
          "circuitBreakers": {
            "maxFailures": 2,
            "failureWindow": "10s",
            "recoveryWindow": "30s"
          }
        }
      }
    # Configurar configura√ß√£o de observabilidade
    linkerd.io/observability-config: |
      {
        "metrics": {
          "enabled": true,
          "port": 4191
        },
        "tracing": {
          "enabled": true,
          "sampling": 0.01
        }
      }

# =============================================================================
# 2. CONFIGURA√á√ÉO DE DEPLOYMENT COM SIDECAR INJECTION
# =============================================================================

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omni-keywords-finder-api
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-api
    version: v1.0.0
    environment: production
  annotations:
    # Configurar configura√ß√£o espec√≠fica do proxy para API
    linkerd.io/proxy-config: |
      {
        "proxy": {
          "resources": {
            "cpu": {
              "request": "100m",
              "limit": "300m"
            },
            "memory": {
              "request": "256Mi",
              "limit": "1Gi"
            }
          },
          "timeouts": {
            "connect": "1s",
            "read": "60s",
            "write": "60s"
          },
          "circuitBreakers": {
            "maxFailures": 10,
            "failureWindow": "10s",
            "recoveryWindow": "30s"
          }
        }
      }
spec:
  replicas: 3
  selector:
    matchLabels:
      app: omni-keywords-finder-api
  template:
    metadata:
      labels:
        app: omni-keywords-finder-api
        version: v1.0.0
        environment: production
      annotations:
        # Habilitar injection de sidecar
        linkerd.io/inject: enabled
        # Configurar configura√ß√£o de proxy
        linkerd.io/proxy-config: |
          {
            "proxy": {
              "resources": {
                "cpu": {
                  "request": "100m",
                  "limit": "300m"
                },
                "memory": {
                  "request": "256Mi",
                  "limit": "1Gi"
                }
              },
              "timeouts": {
                "connect": "1s",
                "read": "60s",
                "write": "60s"
              },
              "circuitBreakers": {
                "maxFailures": 10,
                "failureWindow": "10s",
                "recoveryWindow": "30s"
              }
            }
          }
        # Configurar configura√ß√£o de observabilidade
        linkerd.io/observability-config: |
          {
            "metrics": {
              "enabled": true,
              "port": 4191
            },
            "tracing": {
              "enabled": true,
              "sampling": 0.1
            }
          }
    spec:
      serviceAccountName: omni-keywords-finder-api
      containers:
      - name: api
        image: omni-keywords-finder/api:latest
        ports:
        - name: http
          containerPort: 8000
        - name: metrics
          containerPort: 9090
        env:
        - name: LINKERD_PROXY_PORT
          value: "4140"
        - name: LINKERD_PROXY_ADMIN_PORT
          value: "4191"
        - name: LINKERD_PROXY_CONTROL_PORT
          value: "4190"
        - name: LINKERD_PROXY_OUTBOUND_PORT
          value: "4140"
        - name: LINKERD_PROXY_INBOUND_PORT
          value: "4143"
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: omni-keywords-finder-ml
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-ml
    version: v1.0.0
    environment: production
  annotations:
    # Configurar configura√ß√£o espec√≠fica do proxy para ML
    linkerd.io/proxy-config: |
      {
        "proxy": {
          "resources": {
            "cpu": {
              "request": "200m",
              "limit": "500m"
            },
            "memory": {
              "request": "512Mi",
              "limit": "2Gi"
            }
          },
          "timeouts": {
            "connect": "1s",
            "read": "120s",
            "write": "120s"
          },
          "circuitBreakers": {
            "maxFailures": 5,
            "failureWindow": "10s",
            "recoveryWindow": "30s"
          }
        }
      }
spec:
  replicas: 2
  selector:
    matchLabels:
      app: omni-keywords-finder-ml
  template:
    metadata:
      labels:
        app: omni-keywords-finder-ml
        version: v1.0.0
        environment: production
      annotations:
        # Habilitar injection de sidecar
        linkerd.io/inject: enabled
        # Configurar configura√ß√£o de proxy
        linkerd.io/proxy-config: |
          {
            "proxy": {
              "resources": {
                "cpu": {
                  "request": "200m",
                  "limit": "500m"
                },
                "memory": {
                  "request": "512Mi",
                  "limit": "2Gi"
                }
              },
              "timeouts": {
                "connect": "1s",
                "read": "120s",
                "write": "120s"
              },
              "circuitBreakers": {
                "maxFailures": 5,
                "failureWindow": "10s",
                "recoveryWindow": "30s"
              }
            }
          }
        # Configurar configura√ß√£o de observabilidade
        linkerd.io/observability-config: |
          {
            "metrics": {
              "enabled": true,
              "port": 4191
            },
            "tracing": {
              "enabled": true,
              "sampling": 0.2
            }
          }
    spec:
      serviceAccountName: omni-keywords-finder-ml
      containers:
      - name: ml
        image: omni-keywords-finder/ml:latest
        ports:
        - name: http
          containerPort: 8001
        - name: metrics
          containerPort: 9090
        env:
        - name: LINKERD_PROXY_PORT
          value: "4140"
        - name: LINKERD_PROXY_ADMIN_PORT
          value: "4191"
        - name: LINKERD_PROXY_CONTROL_PORT
          value: "4190"
        - name: LINKERD_PROXY_OUTBOUND_PORT
          value: "4140"
        - name: LINKERD_PROXY_INBOUND_PORT
          value: "4143"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL

# =============================================================================
# 3. CONFIGURA√á√ÉO DE SERVICE ACCOUNTS
# =============================================================================

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: omni-keywords-finder-api
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-api
    environment: production
  annotations:
    # Configurar workload identity
    linkerd.io/workload-identity: "omni-keywords-finder-api"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: omni-keywords-finder-ml
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-ml
    environment: production
  annotations:
    # Configurar workload identity
    linkerd.io/workload-identity: "omni-keywords-finder-ml"

# =============================================================================
# 4. CONFIGURA√á√ÉO DE RBAC PARA SIDECAR INJECTION
# =============================================================================

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: omni-keywords-finder-api
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-api
    environment: production
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["authorizationpolicies", "meshtlsauthentications", "networks"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: omni-keywords-finder-ml
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-ml
    environment: production
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["authorizationpolicies", "meshtlsauthentications", "networks"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: omni-keywords-finder-api
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-api
    environment: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: omni-keywords-finder-api
subjects:
- kind: ServiceAccount
  name: omni-keywords-finder-api
  namespace: omni-keywords-finder

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: omni-keywords-finder-ml
  namespace: omni-keywords-finder
  labels:
    app: omni-keywords-finder-ml
    environment: production
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: omni-keywords-finder-ml
subjects:
- kind: ServiceAccount
  name: omni-keywords-finder-ml
  namespace: omni-keywords-finder

# =============================================================================
# 5. CONFIGURA√á√ÉO DE VALIDA√á√ÉO DE SIDECAR INJECTION
# =============================================================================

---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    app: linkerd-proxy-injector
    linkerd.io/control-plane-component: proxy-injector
webhooks:
- name: proxy-injector.linkerd.io
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
      port: 8443
  rules:
  - apiGroups: [""]
    apiVersions: ["v1"]
    operations: ["CREATE"]
    resources: ["pods"]
    scope: "Namespaced"
  - apiGroups: ["apps"]
    apiVersions: ["v1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["deployments", "daemonsets", "statefulsets"]
    scope: "Namespaced"
  - apiGroups: ["batch"]
    apiVersions: ["v1"]
    operations: ["CREATE", "UPDATE"]
    resources: ["jobs", "cronjobs"]
    scope: "Namespaced"
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1"]
  timeoutSeconds: 10

# =============================================================================
# 6. CONFIGURA√á√ÉO DE MONITORAMENTO PARA SIDECAR INJECTION
# =============================================================================

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: linkerd-proxy-injection
  namespace: omni-keywords-finder
  labels:
    app: linkerd-proxy-injection
    environment: production
spec:
  selector:
    matchLabels:
      app: linkerd-proxy-injection
  endpoints:
  - port: metrics
    interval: 15s
    path: /metrics
  - port: admin
    interval: 15s
    path: /ping

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: linkerd-proxy-injection-alerts
  namespace: omni-keywords-finder
  labels:
    app: linkerd-proxy-injection
    environment: production
spec:
  groups:
  - name: linkerd-proxy-injection
    rules:
    - alert: LinkerdProxyInjectionFailed
      expr: increase(linkerd_proxy_injector_inject_total{result="error"}[5m]) > 0
      for: 1m
      labels:
        severity: warning
        environment: production
      annotations:
        summary: "Linkerd proxy injection failed"
        description: "Linkerd proxy injection has failed for {{ $labels.pod }} in namespace {{ $labels.namespace }}"
    
    - alert: LinkerdProxyInjectionHighLatency
      expr: histogram_quantile(0.95, linkerd_proxy_injector_inject_duration_seconds_bucket) > 1
      for: 5m
      labels:
        severity: warning
        environment: production
      annotations:
        summary: "Linkerd proxy injection high latency"
        description: "Linkerd proxy injection is taking longer than 1 second for 95% of requests"

# =============================================================================
# 7. CONFIGURA√á√ÉO DE TESTES PARA SIDECAR INJECTION
# =============================================================================

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-injection-test-config
  namespace: omni-keywords-finder
  labels:
    app: sidecar-injection-test
    environment: production
data:
  test-config.yaml: |
    # Configura√ß√£o de testes para sidecar injection
    tests:
      - name: "sidecar-injection-enabled"
        description: "Verificar se sidecar injection est√° habilitado"
        type: "validation"
        expected: true
        
      - name: "proxy-resources-correct"
        description: "Verificar se recursos do proxy est√£o corretos"
        type: "validation"
        expected:
          cpu_request: "50m"
          cpu_limit: "200m"
          memory_request: "128Mi"
          memory_limit: "512Mi"
          
      - name: "proxy-ports-correct"
        description: "Verificar se portas do proxy est√£o corretas"
        type: "validation"
        expected:
          admin_port: 4191
          control_port: 4190
          inbound_port: 4143
          outbound_port: 4140
          
      - name: "mTLS-enabled"
        description: "Verificar se mTLS est√° habilitado"
        type: "validation"
        expected: true
        
      - name: "metrics-enabled"
        description: "Verificar se m√©tricas est√£o habilitadas"
        type: "validation"
        expected: true

# =============================================================================
# 8. SCRIPT DE VERIFICA√á√ÉO DE SIDECAR INJECTION
# =============================================================================

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-injection-verification-script
  namespace: omni-keywords-finder
  labels:
    app: sidecar-injection-verification
    environment: production
data:
  verify-sidecar-injection.sh: |
    #!/bin/bash
    # Script para verificar se sidecar injection est√° funcionando corretamente
    
    set -euo pipefail
    
    echo "üîç Verificando sidecar injection do Linkerd..."
    
    # Verificar se namespace tem label de injection
    echo "üìã Verificando labels do namespace..."
    kubectl get namespace omni-keywords-finder -o jsonpath='{.metadata.labels.linkerd\.io/inject}'
    
    # Verificar se pods t√™m sidecar
    echo "üîß Verificando sidecar nos pods..."
    kubectl get pods -n omni-keywords-finder -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.containers[*].name}{"\n"}{end}' | grep linkerd-proxy
    
    # Verificar status do proxy
    echo "üìä Verificando status do proxy..."
    kubectl get pods -n omni-keywords-finder -o jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.status.containerStatuses[*].ready}{"\n"}{end}' | grep linkerd-proxy
    
    # Verificar m√©tricas do proxy
    echo "üìà Verificando m√©tricas do proxy..."
    kubectl port-forward -n omni-keywords-finder svc/omni-keywords-finder-api 4191:4191 &
    sleep 5
    curl -s http://localhost:4191/metrics | grep linkerd_proxy
    kill %1
    
    echo "‚úÖ Verifica√ß√£o de sidecar injection conclu√≠da!"

# =============================================================================
# 9. DOCUMENTA√á√ÉO DE USO
# =============================================================================

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sidecar-injection-documentation
  namespace: omni-keywords-finder
  labels:
    app: sidecar-injection-documentation
    environment: production
data:
  README.md: |
    # Sidecar Injection Configuration
    
    ## Vis√£o Geral
    
    Este arquivo configura a inje√ß√£o autom√°tica de sidecars do Linkerd
    nos deployments do sistema Omni Keywords Finder.
    
    ## Componentes Configurados
    
    ### 1. Namespaces
    - `omni-keywords-finder` (production)
    - `omni-keywords-finder-staging` (staging)
    - `omni-keywords-finder-development` (development)
    
    ### 2. Deployments
    - `omni-keywords-finder-api` (API principal)
    - `omni-keywords-finder-ml` (Machine Learning)
    
    ### 3. Configura√ß√µes de Proxy
    - Recursos otimizados por ambiente
    - Timeouts configurados por workload
    - Circuit breakers configurados
    - Observabilidade habilitada
    
    ## Como Aplicar
    
    ```bash
    # Aplicar configura√ß√£o
    kubectl apply -f infrastructure/service-mesh/sidecar-injection.yaml
    
    # Verificar status
    kubectl get pods -n omni-keywords-finder -o wide
    
    # Verificar sidecar injection
    kubectl exec -n omni-keywords-finder deploy/omni-keywords-finder-api -- ps aux | grep linkerd-proxy
    ```
    
    ## Monitoramento
    
    ### M√©tricas Dispon√≠veis
    - `linkerd_proxy_inject_total`: Total de inje√ß√µes
    - `linkerd_proxy_inject_duration_seconds`: Dura√ß√£o da inje√ß√£o
    - `linkerd_proxy_requests_total`: Total de requests
    - `linkerd_proxy_request_duration_seconds`: Dura√ß√£o dos requests
    
    ### Alertas Configurados
    - `LinkerdProxyInjectionFailed`: Falha na inje√ß√£o
    - `LinkerdProxyInjectionHighLatency`: Alta lat√™ncia na inje√ß√£o
    
    ## Troubleshooting
    
    ### Problemas Comuns
    
    1. **Sidecar n√£o injetado**
       ```bash
       kubectl get namespace omni-keywords-finder -o jsonpath='{.metadata.labels.linkerd\.io/inject}'
       ```
    
    2. **Proxy n√£o iniciando**
       ```bash
       kubectl logs -n omni-keywords-finder deploy/omni-keywords-finder-api -c linkerd-proxy
       ```
    
    3. **M√©tricas n√£o dispon√≠veis**
       ```bash
       kubectl port-forward -n omni-keywords-finder svc/omni-keywords-finder-api 4191:4191
       curl http://localhost:4191/metrics
       ```
    
    ## Performance
    
    ### Overhead Estimado
    - CPU: 50-200m por pod
    - Mem√≥ria: 128Mi-1Gi por pod
    - Lat√™ncia: 1-2ms por request
    
    ### Otimiza√ß√µes
    - Recursos configurados por ambiente
    - Sampling de tracing configurado
    - Circuit breakers otimizados
    
    ## Seguran√ßa
    
    ### mTLS
    - Habilitado automaticamente
    - Certificados gerenciados pelo Linkerd
    - Identity verification autom√°tica
    
    ### RBAC
    - Service accounts configurados
    - Roles e role bindings definidos
    - Permiss√µes m√≠nimas necess√°rias

# =============================================================================
# FIM DA CONFIGURA√á√ÉO
# ============================================================================= 